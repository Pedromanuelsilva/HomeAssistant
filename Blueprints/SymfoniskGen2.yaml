blueprint:
# Media control via IKEA Symfonisk Gen2 - Shawsky April 2023 v1.52
# Updated May 2023 - Add group volume control
# Updated June 2023 - Resolve filtering issue where multiple devices are in use
# Updated August 2023 - Resolve a volume issue for media players with no group_memeber attribute
# Updated September 2023 - Further updates for group/non grouped behaviour / fix issue for volume hold for grouped/non grouped. Allow 100 volume steps.
# Volume changes partially based on https://gist.github.com/erkr/a437ebcb98a2b5ba2deebabd02f5ffae Eric Kreuwels
# and https://gist.github.com/alexwmaustin/2c25cfa1a0ade1ab9fc1ef0940289672 Alex Austin
  name: Z2M - IKEA Symfonisk sound controller GEN2 all custom presses
  source_url: https://raw.githubusercontent.com/Pedromanuelsilva/HomeAssistant/main/Blueprints/SymfoniskGen2.yaml
  description: 
    'Control the selected media player (and any joined to it) with an IKEA Symfonisk sound controller GEN2 via Zigbee2MQTT (Z2M)
    Supports single press on media buttons and single, double and long press for the "dot" buttons.'
  domain: automation
  input:
    remote:
      name: Remote
      description: The IKEA Symfonisk controller GEN2 to use
      selector:
        device:
          integration: mqtt
          manufacturer: IKEA
          model: SYMFONISK sound remote gen2 (E2123)
          multiple: false
    base_topic:
      name: Zigbee2MQTT Base mqtt topic
      description: The base topic configured in Zigbee2MQTT. If you haven't changed this, leave the default here ("zigbee2mqtt")
      default: zigbee2mqtt
    play:
      name: Play
      description: Action to run on Play press
      default: []
      selector:
        action: {}
    next_track:
      name: Next Track
      description: Action to run on Next Track press
      default: []
      selector:
        action: {}
    previous_track:
      name: Previous Track
      description: Action to run on Previous Track press
      default: []
      selector:
        action: {}
    volume_up_press:
      name: Volume Up Press
      description: Action to run on Volume Up Press
      default: []
      selector:
        action: {}
    volume_up_hold:
      name: Volume Up Hold
      description: Action to run on Volume Up hold
      default: []
      selector:
        action: {}
    volume_down_press:
      name: Volume Down Press
      description: Action to run on Volume Down Press
      default: []
      selector:
        action: {}
    volume_down_hold:
      name: Volume Down Hold
      description: Action to run on Volume Down Hold
      default: []
      selector:
        action: {}   
    single_dot:
      name: Single Dot (Single)
      description: Action to run on single dot press
      default: []
      selector:
        action: {}
    single_dot_double_press:
      name: Single Dot (Double)
      description: Action to run on single dot double press
      default: []
      selector:
        action: {}
    single_dot_long_press:
      name: Single Dot (Long)
      description: Action to run on single dot long press
      default: []
      selector: 
        action: {}
    double_dot:
      name: Double Dot (Single)
      description: Action to run on double dot press
      default: []
      selector:
        action: {}
    double_dot_double_press:
      name: Double Dot (Double)
      description: Action to run on double dot double press
      default: []
      selector:
        action: {}
    double_dot_long_press:
      name: Double Dot (Long)
      description: Action to run on double dot long press
      default: []
      selector:
        action: {}
      
mode: restart
max_exceeded: silent

trigger_variables:
  base_topic: !input base_topic
  controller: !input remote

trigger:
  - platform: mqtt
    topic: "{{ base_topic }}/+/action"
action:
  - variables:
      controllertopic: "{{ base_topic }}/{{ device_attr(controller, 'name') }}/action"
  - choose:
    - conditions:
      - "{{ trigger.payload != ''}}"
      - "{{ trigger.topic == controllertopic }}"
      sequence:
        - choose:
          ## Actions
          # Play / Pause
          - conditions: "{{ trigger.payload == 'toggle' }}"
            sequence: !input play
          # Next
          - conditions: "{{ trigger.payload == 'track_next' }}"
            sequence: !input next_track
          # Previous
          - conditions: "{{ trigger.payload == 'track_previous' }}"
            sequence: !input previous_track
          # Volume Up Press
          - conditions: "{{ trigger.payload == 'volume_up' }}"
            sequence: !input volume_up_press
          # Volume Up Hold
          - conditions: "{{ trigger.payload == 'volume_up_hold' }}"
            sequence: !input volume_up_hold
          # Volume Down Press
          - conditions: "{{ trigger.payload == 'volume_down'}}"
            sequence: !input volume_down_press
          # Volume Down Hold
          - conditions: "{{ trigger.payload == 'volume_down_hold' }}"
            sequence: !input volume_down_hold
          # Single Dot Press
          - conditions: "{{ trigger.payload == 'dots_1_short_release' }}"
            sequence: !input single_dot
          # Single Dot Double Press
          - conditions: "{{ trigger.payload == 'dots_1_double_press' }}"
            sequence: !input single_dot_double_press
          # Single Dot Long Press
          - conditions: "{{ trigger.payload == 'dots_1_long_press' }}"
            sequence: !input single_dot_long_press
          # Double Dot Press
          - conditions: "{{ trigger.payload == 'dots_2_short_release' }}"
            sequence: !input double_dot
          # Double Dot Double Press
          - conditions: "{{ trigger.payload == 'dots_2_double_press' }}"
            sequence: !input double_dot_double_press
          # Double Dot Long Press
          - conditions: "{{ trigger.payload == 'dots_2_long_press' }}"
            sequence: !input double_dot_long_press